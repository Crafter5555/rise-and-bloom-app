#!/bin/bash

# Rise and Bloom - Production Keystore Generation Script
# This script generates a production keystore for Android app signing

echo "üîê Rise and Bloom - Production Keystore Generator"
echo "================================================="
echo ""

# Set keystore details
KEYSTORE_NAME="rise-and-bloom-release.jks"
KEY_ALIAS="rise-and-bloom"
VALIDITY_DAYS=10000
KEY_SIZE=2048

echo "Generating production keystore with the following details:"
echo "üìÅ Keystore file: $KEYSTORE_NAME"
echo "üîë Key alias: $KEY_ALIAS"
echo "üìÖ Validity: $VALIDITY_DAYS days (~27 years)"
echo "üîê Key size: $KEY_SIZE bits"
echo ""

# Generate the keystore
echo "‚ö° Generating keystore..."
keytool -genkey -v \
  -keystore "$KEYSTORE_NAME" \
  -keyalg RSA \
  -keysize $KEY_SIZE \
  -validity $VALIDITY_DAYS \
  -alias "$KEY_ALIAS"

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Keystore generated successfully!"
    echo ""
    echo "üìç IMPORTANT: Save these details securely:"
    echo "   ‚Ä¢ Keystore file: $KEYSTORE_NAME"
    echo "   ‚Ä¢ Key alias: $KEY_ALIAS"
    echo "   ‚Ä¢ Store password: [what you entered]"
    echo "   ‚Ä¢ Key password: [what you entered]"
    echo ""
    echo "üîí Security recommendations:"
    echo "   ‚Ä¢ Store the keystore file in a secure location"
    echo "   ‚Ä¢ Back up the keystore and passwords securely"
    echo "   ‚Ä¢ Never commit the keystore to version control"
    echo "   ‚Ä¢ Use the same keystore for all future app updates"
    echo ""
    echo "‚û°Ô∏è  Next steps:"
    echo "   1. Move $KEYSTORE_NAME to android/app/ directory"
    echo "   2. Update android/app/build.gradle with your passwords"
    echo "   3. Build release version with: ./gradlew bundleRelease"
else
    echo ""
    echo "‚ùå Keystore generation failed!"
    echo "Please check the error messages above and try again."
fi